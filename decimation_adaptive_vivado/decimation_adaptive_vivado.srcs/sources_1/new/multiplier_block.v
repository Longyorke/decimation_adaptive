// -------------------------------------------------------------
// 
// File Name: C:\Users\dell\Desktop\xilinx_DLP\adaptive\mdv_lms_hdl_coder\MDV_LMS\multiplier_block.v
// Created: 2025-04-30 11:34:40
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: multiplier_block
// Source Path: MDV_LMS/MDV LMS Algorithm/Filter/Multiplier/multiplier
// Hierarchy Level: 3
// Model version: 8.2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module multiplier_block
          (clk,
           enb,
           in1,
           in2,
           out);


  input   clk;
  input   enb;
  input   signed [15:0] in1;  // sfix16_En13
  input   signed [23:0] in2;  // sfix24_En21
  output  signed [39:0] out;  // sfix40_En34


  reg signed [39:0] out_1;  // sfix40_En34
  reg signed [15:0] in1d1;  // sfix16
  reg signed [15:0] in1d2;  // sfix16
  reg signed [23:0] in2d1;  // sfix24
  reg signed [23:0] in2d2;  // sfix24
  reg signed [39:0] yreg1;  // sfix40
  reg signed [39:0] yreg2;  // sfix40

  initial begin
    in1d1 = 16'sb0000000000000000;
    in1d2 = 16'sb0000000000000000;
    in2d1 = 24'sb000000000000000000000000;
    in2d2 = 24'sb000000000000000000000000;
    out_1 = 40'sh0000000000;
    yreg1 = 40'sh0000000000;
    yreg2 = 40'sh0000000000;
  end

  always @(posedge clk)
    begin : multiplier_process
      if (enb) begin
        in1d2 <= in1d1;
        in1d1 <= in1;
        in2d2 <= in2d1;
        in2d1 <= in2;
        out_1 <= yreg1;
        yreg1 <= yreg2;
        yreg2 <= in1d2 * in2d2;
      end
    end

  assign out = out_1;

endmodule  // multiplier_block

